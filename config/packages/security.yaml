security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_database:
            entity:
                class: App\Entity\User
                property: email
#        in_memory: { memory: null }
    encoders:
        App\Entity\User:
            algorithm: auto

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin:
            pattern: ^/deliv-admin
            anonymous: true

            provider: in_database

            guard:
                authenticators:
                    - App\Security\Guard\AdminAuthenticator
#            form_login:
#                login_path: admin_connexion
#                check_path: admin_connexion
#                default_target_path: admin_dashboard
#                always_use_default_target_path: true
#                csrf_token_generator: security.csrf.token_manager

            logout:
                path: admin_deconnexion
                target: admin_connexion
        user:
            pattern: ^/user
            anonymous: true

            provider: in_database

            guard:
                authenticators:
                    - App\Security\Guard\UserAuthenticator
            context: website_context
#            form_login:
#                login_path: login
#                check_path: login
#                default_target_path: profile
#                always_use_default_target_path: true
#                csrf_token_generator: security.csrf.token_manager

            logout:
                path: logout
                target: login
        main:
            anonymous: lazy
            provider: in_database
            context: website_context

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    role_hierarchy:
        ROLE_ADMIN: [ ROLE_USER, ROLE_CONSUMER, ROLE_BIKER, ROLE_MANAGER, ROLE_OWNER, ROLE_ALLOWED_TO_SWITCH ]
        ROLE_CONSUMER: ROLE_USER
        ROLE_BIKER: ROLE_USER
        ROLE_MANAGER: ROLE_USER
        ROLE_OWNER: ROLE_USER
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/deliv-admin/account/connexion, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/deliv-admin/account/registration, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/deliv-admin/account/forgotten, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/deliv-admin/account/recuperation-password/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # role admin requis pour le back
        - { path: ^/deliv-admin, roles: ROLE_ADMIN }
        - { path: ^/deliv-admin/administration, roles: ROLE_ADMIN }
